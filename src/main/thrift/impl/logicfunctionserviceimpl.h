// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#ifndef __LOGIC_FUNCTION_SERVICE_H
#define __LOGIC_FUNCTION_SERVICE_H 1
#include "logicfunctionservice.h"

class LogicFunctionServiceImpl : virtual public LogicFunctionServiceIf {
 public:
  LogicFunctionServiceImpl();
  ~LogicFunctionServiceImpl();
  int32_t raiseSignal(const eIOTSignalType::type type);
  void getAllowSites(std::map<std::string, eIOTNodeType::type> & _return);
  int32_t addSite(const std::string& phyAddr, const eIOTNodeType::type type);
  int32_t delSite(const std::string& phyAddr);
  int32_t delDevice(const std::string& phyAddr);
  int32_t getNetworkStatus();
  int32_t operateNetwork(const bool isOpen);
  int32_t rebuildNetwork();
};

#endif